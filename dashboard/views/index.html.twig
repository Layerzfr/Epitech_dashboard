{% extends 'layout.html.twig' %}


{% block body %}
    <link href="/stylesheets/reseaux.css" rel="stylesheet"/>
    {% if user %}
        <div class="doted grid-stack">
{#            <p style="display: flex;margin: auto">DASHBOARD</p>#}
{#            <div class="grid-stack">#}

            <div class="grid-stack-item" data-gs-x="4" data-gs-y="0" data-gs-width="4" data-gs-height="6">
                <div id="playlist-container" style="display: none">
                    <div class="grid-stack-item-content">
                        <div id="lecteur">
                            <iframe src="https://open.spotify.com/embed/playlist/" width="300" height="380"
                                    frameborder="0"
                                    allowtransparency="true" allow="encrypted-media"></iframe>
                        </div>
                    </div>
                </div>
            </div>

            <div class="grid-stack-item" data-gs-x="8" data-gs-y="0" data-gs-width="4" data-gs-height="6">
                <div id="playlist-container-top" style="display: none">
                    <div class="grid-stack-item-content">
                        <div id="lecteur-top">
                        </div>
                    </div>
                </div>
            </div>

            <div class="grid-stack-item" data-gs-x="0" data-gs-y="6" data-gs-width="4" data-gs-height="2">
                <div id="player-count" style="display: none">
                    Jeu: <div id="gameName"></div>
                    Nombre de joueurs actuel <div id="count"></div>
                </div>
            </div>


{#            </div>#}
        </div>

            <script type="text/javascript">
            $(document).ready(function () {

            let count = 0;
            var grid = GridStack.init({
                alwaysShowResizeHandle: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(
                    navigator.userAgent
                ),
                resizable: {
                    handles: 'e, se, s, sw, w'
                },
                removable: '.trash',
                removeTimeout: 100,
                acceptWidgets: '.newWidget'
            });
        // addNewWidget = function () {
        //     $("#playlist-container").show();
        //     // grid.addWidget("", node);
        //     return false;
        // };
            grid.on('added', function(e, items) { log('added ', items) });
            grid.on('removed', function(e, items) { log('removed ', items) });
            grid.on('change', function(e, items) { log('change ', items) });
            grid.on('dropped', function(e, items) { console.log('change ', e) });
            function log(type, items) {
                var str = '';
                items.forEach(function(item) { str += ' (x,y)=' + item.x + ',' + item.y; });
                console.log(type + items.length + ' items.' + str );
            }

            // TODO: switch jquery-ui out
            $('.newWidget').draggable({
                revert: 'invalid',
                scroll: false,
                appendTo: 'body',
                helper: 'clone'
            });
    })

        </script>


{#        Script playlist#}
        <script>
            $.ajax({
                url: "/spotify/api/getUserPlaylist",
                dataType: "json",
                type: "GET",
                success: function(data){
                    console.log(data);
                    if(data.error == 401) {
                        window.location.href = "https://accounts.spotify.com/fr/authorize?client_id=2847f09c105d4a07aec94c448957fe60&response_type=code&redirect_uri=http://127.0.0.1:3000/spotify/sessions/callback&&scope=user-read-private%20user-read-email%20playlist-read-private%20user-top-read";
                    }
                    var dataArr = [];
                    $( function() {
                        data.forEach(function (element) {
                            dataArr.push({label: element[1], value: element[1], id: element[0]});
                        });
                        $( "#playlist" ).autocomplete({
                            select: function( event, ui ) {
                                displayLecteur(ui.item.id);
                                $("#playlist-container").show();

                            },
                            max:10,
                            minLength: 4,
                            source: dataArr
                        });
                    } );
                }

            });

            function displayLecteur(id) {
                $('#lecteur').html('<iframe src="https://open.spotify.com/embed/playlist/'+id+'" width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>')
            }
        </script>


{#        //spotify lecteur top#}
        <script>
            function displayLecteurTop(id, type) {
                if(type == "tracks") {
                    $('#lecteur-top').html('<iframe src="https://open.spotify.com/embed/track/'+id+'" width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>')
                }else {
                    $('#lecteur-top').html('<iframe src="https://open.spotify.com/embed/artist/'+id+'" width="300" height="380" frameborder="0" allowtransparency="true" allow="encrypted-media"></iframe>')
                }
                $('#playlist-container-top').show();
            }

            function searchTop(type){
                $.ajax({
                    url: "/spotify/api/top",
                    dataType: "json",
                    data: "type="+type,
                    type: "GET",
                    success: function(data){
                        if(data.error == 401) {
                            window.location.href = "https://accounts.spotify.com/fr/authorize?client_id=2847f09c105d4a07aec94c448957fe60&response_type=code&redirect_uri=http://127.0.0.1:3000/spotify/sessions/callback&&scope=user-read-private%20user-read-email%20playlist-read-private%20user-top-read";
                        }
                        var data = JSON.parse(data);
                        $("#results").html('');
                        let i = 1;
                        data.items.forEach(function (item) {
                            let p = "'";
                            $("#results").append('<div>'+i+' - <span onclick="displayLecteurTop(\'+p+item.id+p+\', '+p+type+p+')" >'+item.name+'</span></div>')
                            i++;
                        })
                    }

                });
            }
        </script>

{#        Fonction steam player#}
        <script>
            $.ajax({
                url: "http://127.0.0.1:3000/steam/getAllGames",
                dataType: "json",
                type: "GET",
                success: function(data){
                    var dataArr = [];
                    $( function() {
                        data.forEach(function (element) {
                            dataArr.push({label: element.appName, value: element.appName, id: element.appId});
                        })
                        // console.log(dataArr)
                        $( "#game" ).autocomplete({
                            // source: availableTags,
                            select: function( event, ui ) {
                                // console.log(ui.item)
                                getPlayerCount(ui.item.label, ui.item.id)

                            },
                            max:10,
                            minLength: 4,

                            source: dataArr

                        });
                    } );
                }

            });

            function getPlayerCount(appName, appId) {
                console.log("getting player count ... for appid " + appId);
                $.ajax({
                    url: "http://127.0.0.1:3000/steam/getPlayerCount",
                    data: "appid="+appId,
                    dataType: "json",
                    type: "GET",
                    success: function(data){
                        console.log(data);
                        $('#gameName').html(appName);
                        $('#count').html(data.player_count);
                        $('#player-count').show();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert(xhr.status);
                        alert(thrownError);
                    }

                });
            }
        </script>

    {% else %}
        {% block Connexion %}
            <link href="/stylesheets/connexion.css" rel="stylesheet"/>
            <form id="form" class="box" role="form" action="/login" method="post">
                <div class="input-container">
                    <p>Identifiez-vous</p>
                    <div class="input-1">
                        <svg width="25" height="25" viewBox="0 0 24 24" class="icon-form">
                            <path class="icon-path"
                                  d="M12 14.016q2.531 0 5.273 1.102t2.742 2.883v2.016h-16.031v-2.016q0-1.781 2.742-2.883t5.273-1.102zM12 12q-1.641 0-2.813-1.172t-1.172-2.813 1.172-2.836 2.813-1.195 2.813 1.195 1.172 2.836-1.172 2.813-2.813 1.172z"
                            ></path>
                        </svg>
                        <input class="input" type="text" name="username" id="inputEmail" placeholder="Votre nom"
                               required>
                    </div>
                    <div class="line"></div>
                    <div class="input-2">
                        <svg width="25" height="25" viewBox="0 0 32 32" class="icon-form">
                            <path class="icon-path"
                                  d="M15 21.915v0c-0.583-0.206-1-0.762-1-1.415 0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5c0 0.653-0.417 1.209-1 1.415v2.594c0 0.263-0.224 0.491-0.5 0.491-0.268 0-0.5-0.22-0.5-0.491v-2.594zM8 14v0 0c-1.658 0.005-3 1.34-3 3.009v9.981c0 1.662 1.346 3.009 3.009 3.009h14.982c1.662 0 3.009-1.337 3.009-3.009v-9.981c0-1.659-1.341-3.005-3-3.009v-3.501c0-4.142-3.366-7.499-7.5-7.499-4.142 0-7.5 3.357-7.5 7.499v3.501zM11 14v-3.499c0-2.492 2.015-4.501 4.5-4.501 2.48 0 4.5 2.015 4.5 4.501v3.499h-9z"
                            ></path>
                        </svg>
                        <input class="input" type="password" name="password" id="inputPassword"
                               placeholder="Votre mot de passe">
                    </div>
                    <div class="button-container">
                        <a class="button-connexion" onclick="document.getElementById('form').submit()">Se connecter</a>
                        <a class="button-connexion" href="/register">S'inscrire</a>
                    </div>
                </div>
            </form>

            <script src="/JS/connexion.js"></script>
        {% endblock %}
    {% endif %}
    {#    <p>Coucou</p>#}
{% endblock %}
